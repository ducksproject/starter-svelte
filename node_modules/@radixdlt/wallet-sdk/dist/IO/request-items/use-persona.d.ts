import { UsePersonaReadRequestItem, UsePersonaResponseItem } from '../schemas';
export type UsePersona = {
    wallet: {
        request: UsePersonaReadRequestItem;
        response: UsePersonaResponseItem;
    };
    method: {
        output: {
            persona: {
                id: string;
            };
        };
        input: {
            id: string;
        };
    };
};
type NotAllowedKeys = Partial<{
    login: any;
    usePersona: any;
}>;
export declare const usePersona: (id: string) => <I>(input: I extends Partial<{
    login: any;
    usePersona: any;
}> ? never : I) => (I extends Partial<{
    login: any;
    usePersona: any;
}> ? never : I) & {
    usePersona: {
        id: string;
    };
};
export {};
